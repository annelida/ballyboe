Import and reload module example
#+begin_src python :results output
  import script1
  from importlib import reload
  reload(script1)
#+end_src

#+RESULTS:
: linux
: 1267650600228229401496703205376
: Spam!Spam!Spam!Spam!Spam!Spam!Spam!Spam!
: linux
: 1267650600228229401496703205376
: Spam!Spam!Spam!Spam!Spam!Spam!Spam!Spam!

Access to module attribute
#+begin_example myfile.py
title = "The Meaning of Life"
#+end_example

#+begin_src python :results output
  import myfile          # Run file; load module as a whole
  print(myfile.title)    # Use its attribute names: '.' to qualify
#+end_src

#+RESULTS:
: The Meaning of Life

the dot expression syntax =object.attribute=

#+begin_src python :results output
  from myfile import title   # Run file; copy its names
  print(title)               # Use name directly: no need to qualify
#+end_src

#+RESULTS:
: The Meaning of Life

#+begin_src python :results output
  import threenames
  print(threenames.b, threenames.c)
  print(dir(threenames))
#+end_src

#+RESULTS:
: dead parrot sketch
: parrot sketch
: ['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'a', 'b', 'c']

When the =dir= function is called with the name of an imported module
passed in parentheses like this, it returns all
the attributes inside that module.

#+begin_src python :results output
  from threenames import a, b, c
  print(b, c)
#+end_src

#+RESULTS:
: dead parrot sketch
: parrot sketch

