#+BEGIN_EXPORT html
---
layout: page
title: SSH Connection to Remote Linux Hosts
tagline: " connect easily and securely"
permalink: /linux/debian/SSH-connection.html
categories: [Linux, Debian12, SSH]
tags: [Linux, Debian12, ssh]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export

* Introduction

SSH (Secure Shell) is a protocol used to securely connect to remote
servers or systems over a network. It provides a secure channel for
communication, allowing users to execute commands, transfer files, and
manage systems remotely while ensuring confidentiality and
integrity. In this article, there is a detailed breakdown of how SSH
connections work in Linux.

* Components of SSH

The SSH architecture consists of two main components: the *SSH client*
and the *SSH server*.

 *SSH client* is a program running on the user's local machine that
 initiates the connection to a remote server.

 *SSH Server* is a program running on the remote machine that listens
 and accepts incoming SSH connections from clients.

 When a secure SSH connection is established, a shell session
 starts. It enables manipulating the remote machine (server) by typing
 commands within the client on your local computer.


* Prerequisites

- The remote computer must be turned on and have a network connection;
- The SSH Server must be running;
- You must to know the IP address or the name of the remote machine:

  #+begin_src sh :results verbatim
    hostname
    hostname -I
  #+end_src

  #+RESULTS:
  : Dell
  : 192.168.43.143

- You must to have permission to access the remote computer;
- You must to know user's name and password for logging.

* Establishing a Connection


The user initiates an SSH connection from their terminal

#+begin_src sh
  ssh UserName@remote_host
#+end_src

Here, `username` is the account you want to log into, and
`remote_host` is the IP address or hostname of the remote server.

The SSH client attempts to connect to the remote server via TCP on
port **22** (the default port for SSH).

You can check which port SSH is listening on:

#+begin_src sh
grep -i port /etc/ssh/sshd_config
#+end_src

#+RESULTS:
: Port 22
: #GatewayPorts no

If you want to specify a different port, you can use the `-p` option:

#+begin_src sh
  ssh -p 2222 username@remote_host
#+end_src


* How to verify that SSH server is running

#+begin_src sh :results verbatim
  ps -aux | grep sshd
#+end_src

#+RESULTS:
: root     1399815  0.0  0.0  15412  6008 ?        Ss   Apr13   0:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups
: root     1665139  0.0  0.0  17448  9472 ?        Ss   09:10   0:00 sshd: alioth [priv]
: alioth   1665192  0.0  0.0  17708  6004 ?        S    09:10   0:00 sshd: alioth@pts/13
: vikky    1680968  0.0  0.0   6472  2036 ?        S    17:14   0:00 grep sshd

or

#+begin_src sh :results verbatim
  systemctl status ssh
#+end_src

#+RESULTS:
#+begin_example
● ssh.service - OpenBSD Secure Shell server
     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; preset: enabled)
     Active: active (running) since Sat 2024-04-13 09:11:52 IST; 6 days ago
       Docs: man:sshd(8)
             man:sshd_config(5)
    Process: 1399812 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
   Main PID: 1399815 (sshd)
      Tasks: 1 (limit: 18688)
     Memory: 4.2M
        CPU: 184ms
     CGroup: /system.slice/ssh.service
             └─1399815 "sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups"
#+end_example

* How to run SSH server

The process needed to start an SSH server depends from the
distribution of Linux that you are using. In Debian12 you can manually
start it by running:

#+begin_src sh
  sudo systemctl start sshd
#+end_src

or

#+begin_src sh
  sudo service ssh start
#+end_src

To stop the SSH host server, enter the following:

#+begin_src sh
sudo systemctl stop sshd
#+end_src

#+begin_src
  sudo service ssh stop
#+end_src

* SSH port

SSH, by default, is configured to use port 22 for remote
communication. Note that it’s possible to configure a different port
for SSH.

* Notes                                                            :noexport:
