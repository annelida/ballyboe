#+BEGIN_EXPORT html
---
layout: page
title: Essential Database Fundamentals
tagline: " mastering the basics"
permalink: /database-fundamentals.html
categories: [Linux, Database, SQL]
tags: [linux, database, sql]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export

* Introduction

A *database* is an organized collection of data that allows for
efficient storage, retrieval, and management of information. Databases
are essential components of software applications, websites, and
systems, enabling users and applications to store data in a structured
way that makes it easy to access and manipulate.

*Importance of Databases*:

1. *Data Management:*

   Databases provide a systematic way to manage large amounts of data,
   allowing users to insert, update, delete, and retrieve information
   easily.

2. *Efficiency:*

   They optimize data retrieval and storage, significantly improving
   performance for applications that handle large datasets.

3. *Data Consistency and Integrity:*

   Databases enforce rules and constraints to maintain data accuracy
   and integrity, ensuring users operate on reliable information.

4. *Scalability:*

   With the right database solution, applications can grow to handle
   increasing amounts of data and user loads without significant
   changes to the software architecture.

5. *Multi-User Access:*

   Databases allow multiple users to interact with data simultaneously
   while maintaining data consistency through concurrency control.

* Databases types and examples

- /Hierarchical Databases/: These databases organize data in a
  parent-child relationship, resembling a tree-like structure where
  each child record has only one parent. The Windows Registry is one
  example of this system.;
- /Relational Databases/: Based on the relational data model, these
  databases store data in rows and columns forming tables, allowing
  for multiple types of relationships between tables. his database
  commonly uses /Structured Query Language (SQL)/ for operations like
  creating, reading, updating, and deleting (CRUD) data. MySQL,
  PostgreSQL, Microsoft SQL Server, and Oracle are examples;
- /NoSQL Databases/ or /Non-relational/: These databases store data in
  various ways, not limited to tabular form, and emerged to meet the
  demands of modern applications.

  They are further categorized into:
  - document databases;
  - key-value stores;
  - column-oriented databases;
  - graph databases.
    
   Examples include MongoDB and Redis;
- /Object-oriented Databases/: These databases store data using the
  object-based data model approach, representing and storing data as
  objects similar to those used in object-oriented programming
  languages. One example of an object oriented database is MongoDB
  Realm;

