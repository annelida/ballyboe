#+BEGIN_EXPORT html
---
layout: post
title: Migration from one host to another
subtitle: step by step description
permalink: /linux/moving-from-one-host-to-another.html
categories: [linux, git, literate programming]
tags: [linux, git,  emacs, python, remotes]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export
#+CATEGORY: Migration
#+TODO: RAW INIT TODO ACTIVE | DONE

* Commit and push on Chrome OS
* Git configuration on Dell

Therefore all configs are stored at GitHub, the first and foremost
step to migrate is ~GitHub~ config:

Repositories store in folder ~/git. For the separating repositories by
owners it might be reasonable to create local folders:

+ ~/git
+ ~/git/annelida
+ ~/git/0--key
+ ~/git/misc

  #+begin_src sh
    mkdir ~/git
    cd ~/git/
    mkdir annelida 0--key  misc
    ls
  #+end_src

  After the folders were created it is very mmoment to fill it to
  content by clonning data into them.

  #+begin_src sh
   
    cd ~/git/annelida/
    git clone git@github.com:annelida/ballyboe.git
    git clone git@github.com:annelida/annelida.github.io.git
  #+end_src

  Keys (credentials). The keys were generated, exchange accomplish,
  but tests are not implemented yet;


- Access test;
- Clone test;
- Sample changes;
- Commit;
- Push test
- Pull test;





** Login on remotely computer
#+begin_example
ssh vikky@192.168.43.200
#+end_example

** Check if the ssh keys already exists
#+begin_example
cd ~/.ssh
ls -la
#+end_example

** Generating a new SSH key
Open Terminal, paste the text below, replacing the email used in the
example with your GitHub email address.
#+begin_example
ssh-keygen -t ed25519 -C "your_email@example.com"
#+end_example

** Add keys to ssh-agent
#+begin_example
ssh-add ~/.ssh.id_ed25519
#+end_example

** Add the SSH public key to your account on GitHub
[[https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account][Adding a new SSH key to your GitHub account]]

** Install Git
#+begin_example
sudo apt-get install git
git --version
#+end_example
** Clone repositories
** Create soft link to Emacs configuration files
** Install Magit
** Edit one particular file from repository, commit and push it
** Create list packages that need to be installed in Emacs

* RAW [#A] Migration sequence description
SCHEDULED: <2024-04-03 Wed>
:LOGBOOK:
CLOCK: [2024-04-02 Tue 10:29]--[2024-04-02 Tue 11:45] =>  1:16
:END:

* Existed environment check up

#+begin_src sh
  python --version
  # pip list
  # virtualenv --version
  emacs --version
#+end_src

#+RESULTS:
: Python 3.9.2
: GNU Emacs 27.1
: Copyright (C) 2020 Free Software Foundation, Inc.
: GNU Emacs comes with ABSOLUTELY NO WARRANTY.
: You may redistribute copies of GNU Emacs
: under the terms of the GNU General Public License.
: For more information about these matters, see the file named COPYING.

* Create separated virtual environments for Selenium and Playwright.

#+begin_src sh
  cd ~/.local/
  ls
  # mkdir venvs
  # python -m venv selvenv
  # python -m venv playvenv
  # or through virtualenv
#+end_src

#+RESULTS:
: bin
: lib
: share
: state

* Install Selenium.

* Install Playwright.

* Emacs configuration




