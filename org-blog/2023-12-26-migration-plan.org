#+BEGIN_EXPORT html
---
layout: post
title: Migration from one host to another
subtitle: step by step description
permalink: /linux/moving-from-one-host-to-another.html
categories: [linux, git, literate programming]
tags: [linux, git,  emacs, python, remotes]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export
#+CATEGORY: Migration
#+TODO: | AMPLE
#+TODO: RAW INIT TODO ACTIVE | DONE

* Commit and push on Chrome OS
* Git configuration on Dell

Therefore all configs are stored at GitHub, the first and foremost
step to migrate is ~GitHub~ config:

Repositories store in folder ~/git. For the separating repositories by
owners it might be reasonable to create local folders:

+ ~/git
+ ~/git/annelida
+ ~/git/0--key
+ ~/git/misc

  #+begin_src sh
    mkdir ~/git
    cd ~/git/
    mkdir annelida 0--key  misc
    ls
  #+end_src

  After the folders were created it is very mmoment to fill it to
  content by clonning data into them.

  #+begin_src sh
   
    cd ~/git/annelida/
    git clone git@github.com:annelida/ballyboe.git
    git clone git@github.com:annelida/annelida.github.io.git
  #+end_src

  Keys (credentials). The keys were generated, exchange accomplish,
  but tests are not implemented yet;


- Access test;
- Clone test;
- Sample changes;
- Commit;
- Push test
- Pull test;

* Keys and credentials

** Check if the ssh keys already exists
#+begin_example
cd ~/.ssh
ls -la
#+end_example

** Generating a new SSH key
Open Terminal, paste the text below, replacing the email used in the
example with your GitHub email address.
#+begin_example
ssh-keygen -t ed25519 -C "your_email@example.com"
#+end_example

** Add keys to ssh-agent
#+begin_example
ssh-add ~/.ssh.id_ed25519
#+end_example

** Add the SSH public key to your account on GitHub
[[https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account][Adding a new SSH key to your GitHub account]]

* Git functional testing

Create folder ~/ballyboe/Dell and init.el file inside for separation
Emacs configuration files for different distributives Linux.

#+begin_src sh
  cd ~/git/ballyboe
  mkdir Dell
  touch Dell/init.el
  ls Dell
#+end_src

 Edit Dell/init.el file from repository

 #+begin_src elisp
   (load-theme 'wombat);;manoj-dark)
 #+end_src

 Create a symbolic link from ~/.emacs.d/init.el to repository
 ~/git/ballyboe/Dell/init.el

To ensure that Emacs works correctly relaunch it.  If colour theme is
visiobly different form the default one - Emacs successfully see and
execute the initialization file. It is time to extend it functionality
by adding Magit package

#+begin_src elisp
(require 'magit)
#+end_src

Directive ='require= works only after relaunch Emacs, so you need to
restart it.

After that you can commit the changes and try to push it using Magit.

* Create list packages that need to be installed in Emacs

* [#C] Migration sequence description
SCHEDULED: <2024-04-24 Wed>
:LOGBOOK:
CLOCK: [2024-04-20 Sat 08:21]--[2024-04-20 Sat 08:41] =>  0:20
CLOCK: [2024-04-03 Wed 09:17]--[2024-04-03 Wed 10:13] =>  0:56
CLOCK: [2024-04-02 Tue 10:29]--[2024-04-02 Tue 11:45] =>  1:16
:END:

* Existed environment check up

#+begin_src sh
  python --version
  # pip list
  # virtualenv --version
  emacs --version
#+end_src

#+RESULTS:
: Python 3.9.2
: GNU Emacs 27.1
: Copyright (C) 2020 Free Software Foundation, Inc.
: GNU Emacs comes with ABSOLUTELY NO WARRANTY.
: You may redistribute copies of GNU Emacs
: under the terms of the GNU General Public License.
: For more information about these matters, see the file named COPYING.

* Create separated virtual environments for Selenium and Playwright.

#+begin_src sh
  cd ~/.local/
  ls
  # mkdir venvs
  # python -m venv selvenv
  # python -m venv playvenv
  # or through virtualenv
#+end_src

#+RESULTS:
: bin
: lib
: share
: state

* Install Selenium.

* Install Playwright.

* Emacs configuration
Copy content alioth's =.emacs=, except org-capture, key-chords,
voca-builder, Org-Jekyll's settings and =org-agenda files= to my
=init.el= file.

Evaluate the elisp code for add all subdirs from the host's
=site-lisp= to ~load-path~

#+begin_src elisp
;; add all subdirs from the host's =site-lisp= to ~load-path~
(let* ((my-lisp-dir "/usr/local/share/emacs/site-lisp/")
       (default-directory my-lisp-dir)
       (orig-load-path load-path))
  (setq load-path (cons my-lisp-dir nil))
  (normal-top-level-add-subdirs-to-load-path)
  (nconc load-path orig-load-path))
#+end_src

Restart Emacs and check up content *Warnings* and *Messages* buffers.

** Key-chords customization

Create a symbolic link from ~/.emacs.d/key-chords.el to repository
 ~/git/annelida/ballyboe/bookworm/key-chords.el

#+begin_src sh
  cd ~/.emacs.d
  ln -s ~/git/annelida/ballyboe/bookworm/key-chords.el
  ls -la
#+end_src

Add the =key-chord= load path to =init.el=

#+begin_src elisp
;;======================================================
;; Additional config section:
(load "~/.emacs.d/key-chords.el")
;;
;;======================================================
#+end_src

Testing how key-chords working.

** AMPLE Org-agenda customization
SCHEDULED: <2024-04-26 Fri>

Copy list =org-agenda-files= from
~/git/annelida/ballyboe/bookworm/.emacs to =custom-set-variables=
section inside ~/git/annelida/ballyboe/Dell/init.el. Correct each file
path.

Evaluate the region. Try to create weekly agenda by completing =M-x
org-agenda= command.

** ACTIVE [#A] Org-babel variables customization 
SCHEDULED: <2024-04-24 Wed ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-04-20 Sat 19:11]
:END:
- State "AMPLE"      from "TODO"       [2024-04-20 Sat 19:11]
- State "AMPLE"      from "RAW"        [2024-04-20 Sat 19:11]
- State "AMPLE"      from "TODO"       [2024-04-20 Sat 19:10]
- State "AMPLE"      from "RAW"        [2024-04-17 Wed 19:24]
- State "AMPLE"      from "TODO"       [2024-04-17 Wed 19:24]
- State "AMPLE"      from "TODO"       [2024-04-17 Wed 19:22]
- State "AMPLE"      from "RAW"        [2024-04-11 Thu 18:50]
- State "AMPLE"      from "INIT"       [2024-04-11 Thu 18:50]
- State "AMPLE"      from "RAW"        [2024-04-11 Thu 18:50]
- State "DONE"       from "ACTIVE"     [2024-04-11 Thu 18:50]
- State "AMPLE"      from "RAW"        [2024-04-11 Thu 18:50]
- State "DONE"       from "ACTIVE"     [2024-04-11 Thu 18:49]
- State "AMPLE"      from "RAW"        [2024-04-09 Tue 15:11]
- State "DONE"       from "ACTIVE"     [2024-04-09 Tue 15:11]
- State "AMPLE"      from "TODO"       [2024-04-09 Tue 15:07]
:LOGBOOK:
CLOCK: [2024-04-09 Tue 09:36]--[2024-04-09 Tue 09:59] =>  0:23
CLOCK: [2024-04-09 Tue 07:58]--[2024-04-09 Tue 08:33] =>  0:35
:END:

Customize variables:

org-babel-python-command
indent-tabs-mode



Addiing Org-babel languages list to =init.el= and confirmation to
evaluate the code.

#+begin_src elisp

  (setq org-confirm-babel-evaluate nil)

  ;; Programming languages for Babel
  (org-babel-do-load-languages
  'org-babel-load-languages '((python . t) (emacs-lisp . t) (shell . t) (sqlite . t)))
#+end_src

** Bookmarks+ customization

  Copy file =bookmark+= from git/annelida/ballyboe/bookworm to
  git/annelida/ballyboe/Dell

  #+begin_src sh
    cd ~/git/annelida/ballyboe/bookworm
    cp bookmarks ~/git/ballyboe/Dell
    cd ~/git/ballyboe/Dell
    ls
  #+end_src

  #+RESULTS:
  | agenda        |
  | bookmarks     |
  | drills.org    |
  | glossary.org  |
  | index.org     |
  | key-chords.el |

  Make soft link from ~/.emacs.d foler to =bookmark+= file.

  #+begin_src sh
    cd ~/.emacs.d
    ln -s ~/git/annelida/ballyboe/Dell/bookmarks
    ls -la
  #+end_src

  #+RESULTS:
  | total      | 28 |       |       |      |     |    |       |                                                          |    |                                                          |
  | drwx------ |  7 | vikky | vikky | 4096 | Apr | 11 | 09:26 | .                                                        |    |                                                          |
  | drwx------ | 18 | vikky | vikky | 4096 | Apr |  9 | 15:05 | ..                                                       |    |                                                          |
  | drwx------ |  2 | vikky | vikky | 4096 | Apr |  8 | 11:39 | auto-save-list                                           |    |                                                          |
  | lrwxrwxrwx |  1 | vikky | vikky |   48 | Apr | 11 | 09:26 | bookmarks                                                | -> | /home/vikky/git/annelida/ballyboe/Dell/bookmarks         |
  | drwxr-xr-x |  4 | vikky | vikky | 4096 | Dec | 18 | 12:22 | eln-cache                                                |    |                                                          |
  | drwxr-xr-x |  4 | vikky | vikky | 4096 | Apr |  9 | 16:03 | elpa                                                     |    |                                                          |
  | lrwxrwxrwx |  1 | vikky | vikky |   46 | Apr |  3 | 11:44 | init.el                                                  | -> | /home/vikky/git/annelida/ballyboe/Dell/init.el           |
  | lrwxrwxrwx |  1 | vikky | vikky |   56 | Apr |  5 | 09:53 | key-chords.el                                            | -> | /home/vikky/git/annelida/ballyboe/bookworm/key-chords.el |
  | drwxr-xr-x |  2 | vikky | vikky | 4096 | Apr |  9 | 07:38 | request                                                  |    |                                                          |
  | -rw-r--r-- |  1 | vikky | vikky |    0 | Dec |  8 | 13:55 | session.10e18d78e5f9d79e92170204330881657300001006640073 |    |                                                          |
  | drwxr-xr-x |  2 | vikky | vikky | 4096 | Apr |  8 | 11:38 | transient                                                |    |                                                          |

  Test how Bookmarks+ works in Emacs

** Jekyll's settings

Copy from .emacs to init.el file Jekyll's settings. When change all
directories paths to correct:= ~/git/annelida/ballyboe= instead
=~/git/ballyboe/=

#+begin_src elisp
(setq org-publish-project-alist
'(("jekyll-org"
   :base-directory "~/git/annelida/ballyboe/org-blog/"
   :base-extension "org"
   ;; Path to your Jekyll project.
   :publishing-directory "~/git/annelida/annelida.github.io/_posts/"
   :recursive t
   :publishing-function org-html-publish-to-html
   :headline-levels 4
   :html-extension "html"
   :section-numbers nil
   :with-toc nil
   :body-only t
   ;; Only export section between <body> </body> (body-only)
   )
  ("jekyll-org-img"
   :base-directory "~/git/annelida/ballyboe/org-blog/img/"
   :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf\\|php"
   :publishing-directory "~/git/annelida/annelida.github.io/assets/img/"
   :recursive t
   :publishing-function org-publish-attachment)

  ("jekyll" :components ("jekyll-org" "jekyll-org-img"))
  ))
#+end_src

Execute M-x eval buffer.

Try to export one particular article from the =org format= to =html=.




