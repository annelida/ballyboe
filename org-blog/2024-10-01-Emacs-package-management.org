#+BEGIN_EXPORT html
---
layout: page
title: Emacs package management
permalink: /Emacs/emacs-package-management.html
categories:[Emacs, packages, Elpa, Melpa]
tags: [Emacs, packages]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export
#+CATEGORY: Emacs
#+TODO: RAW INIT TODO ACTIVE | DONE
[[info:emacs#Packages][emacs#Packages]]

* RAW Intro
SCHEDULED: <2024-01-12 Fri>

#+begin_quote
For Emacs users, optimizing their configuration is fun and a sure way
to become an Emacs expert. Generally speaking, a novice’s
configuration is pieced together, which is the fastest and most
efficient way to learn. As you get deeper into Emacs, the
configuration becomes more complex, and it is hard to imagine
continuing to have fun with Emacs without refactoring your previously
disorganized configuration
#+end_quote

* RAW Several definitions
SCHEDULED: <2024-01-12 Fri>
:LOGBOOK:
CLOCK: [2024-01-12 Fri 08:39]
:END:

*A package* is a collection of one or more ELisp files that Emacs
searches in the folder specified by =load-path=.
Packages can be anything from major modes and minor modes to custom
themes and external tools integration. By leveraging these packages,
developers can tailor Emacs to their specific needs and streamline their
workflow. 

Packages installed through the distro package manager are installed to
/usr/local/share/emacs/site-lisp/ which is a default in the load-path.

*Lisp* (historically LISP, an abbreviation of "list processing") is a
high-level programming language created by John McCarthy in 1958. Lisp
is the third-oldest high-level programming language still in common
use, after Fortran and COBOL. It is a machine-independent language
that supports dynamic programming, object-oriented programming, and
data types.

*Package management system* allows users to easily install, manage,
and update packages.

* Package Archives

=Emacs package management= relies on package archives, which act as online
repositories that host packages. These archives contain a vast collection
of packages in various categories. Users can browse, search, and
install packages from these archives easily.

** RAW Package.el
Package.el is the built-in package manager in Emacs, introduced in version
24. It simplifies the process of package installation, updates, and
removal. Package.el provides a unified interface to interact with
package archives, making it convenient for users to discover, install,
and manage packages without leaving Emacs.

** Closure packages
For Clojure development, Emacs offers several packages that enhance
the editing experience and provide specialized features. These
packages assist with syntax highlighting, indentation, code
navigation, project management, and interaction with the Clojure
ecosystem.

* Package menu buffer
The command ‘M-x list-packages’ brings up the “package menu”. Press
‘i’ to mark for installation, ‘u’ to unmark, and ‘x’ to perform the
installation. Press ‘RET’ to read more about installing and using each
package.

* RAW Manual
SCHEDULED: <2024-01-12 Fri>
** Creation
** Initialization
Packages are most conveniently installed using the package menu but
you can also use the command ‘M-x package-install’.

** Upload
* Automatic
* Package's sources: Elpa, Melpa
By default, Emacs 24 or later is set up with the GnuELPA package
archive. If you need to add more sources, include Emacs code like this
to your InitFile:
#+begin_example
(require 'package)
(add-to-list 'package-archives '("elpa" . "https://elpa.gnu.org/packages/") t)
;; and MELPA
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
#+end_example

* .deb
