-*- mode: org; -*-
#+AUTHOR:    Viktoriia Kosinova
#+TITLE:     Mental Athlete's Directives
#+SUBTITLE:  Life in a plain text
#+EMAIL:     viqsiq@gmail.com
#+LANGUAGE: en
#+STARTUP: showall indent
#+PROPERTY: header-args :comments org
#+CATEGORY: Lead
#+TODO: | AMPLE
#+TODO: RAW Init DP0 Todo DP1 Active | DONE
#+TODO: DELAY LAG RETARD | BARE

* Genuine source of knowledge
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-15 Sat 19:14]
:END:
- State "AMPLE"      from ""           [2024-06-15 Sat 19:14]
- State "AMPLE"      from ""           [2024-06-14 Fri 20:05]
- State "AMPLE"      from ""           [2024-06-13 Thu 17:26]
- State "AMPLE"      from ""           [2024-06-12 Wed 07:21]
- State "AMPLE"      from ""           [2024-06-09 Sun 19:03]
- State "AMPLE"      from ""           [2024-06-08 Sat 18:01]
- State "AMPLE"      from ""           [2024-06-07 Fri 19:27]
- State "AMPLE"      from ""           [2024-06-06 Thu 19:41]
- State "AMPLE"      from ""           [2024-06-05 Wed 19:26]
- State "AMPLE"      from ""           [2024-06-04 Tue 19:05]
- State "AMPLE"      from ""           [2024-06-03 Mon 19:56]
- State "AMPLE"      from ""           [2024-06-02 Sun 18:05]
- State "AMPLE"      from ""           [2024-05-30 Thu 19:50]
- State "AMPLE"      from ""           [2024-05-29 Wed 17:21]
- State "AMPLE"      from ""           [2024-05-28 Tue 19:04]
- State "AMPLE"      from ""           [2024-05-27 Mon 18:23]
- State "AMPLE"      from ""           [2024-05-26 Sun 19:32]
- State "AMPLE"      from ""           [2024-05-25 Sat 17:03]
- State "AMPLE"      from ""           [2024-05-24 Fri 19:55]
- State "AMPLE"      from ""           [2024-05-22 Wed 18:04]
- State "AMPLE"      from ""           [2024-05-21 Tue 18:29]
- State "AMPLE"      from ""           [2024-05-20 Mon 17:28]
- State "AMPLE"      from ""           [2024-02-03 Sat 17:19]
- State "AMPLE"      from ""           [2024-02-03 Sat 17:19]
- State "AMPLE"      from ""           [2024-02-02 Fri 17:45]
- State "AMPLE"      from ""           [2024-02-01 Thu 16:48]
- State "AMPLE"      from ""           [2024-01-31 Wed 19:02]
- State "AMPLE"      from ""           [2024-01-30 Tue 14:56]
- State "AMPLE"      from ""           [2024-01-28 Sun 17:19]
- State "AMPLE"      from ""           [2024-01-28 Sun 17:19]
- State "AMPLE"      from ""           [2024-01-27 Sat 15:21]
- State "AMPLE"      from ""           [2024-01-26 Fri 18:47]
- State "AMPLE"      from ""           [2024-01-25 Thu 18:35]
- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-17 Wed 17:17]
- State "DONE"       from "Active"     [2024-01-16 Tue 15:21]
- State "DONE"       from "Active"     [2024-01-14 Sun 12:39]
- State "DONE"       from "Active"     [2024-01-11 Thu 15:59]
- State "DONE"       from "Active"     [2024-01-10 Wed 15:13]
- State "DONE"       from "Active"     [2024-01-09 Tue 15:40]
- State "DONE"       from "Active"     [2024-01-04 Thu 15:01]
- State "DONE"       from "Active"     [2023-12-27 Wed 15:43]
- State "DONE"       from "Active"     [2023-12-26 Tue 15:59]
- State "DONE"       from "Active"     [2023-12-25 Mon 13:21]
- State "DONE"       from "Active"     [2023-12-22 Fri 16:44]
- State "DONE"       from "Active"     [2023-12-21 Thu 17:38]
- State "DONE"       from "Active"     [2023-12-20 Wed 09:51]
- State "DONE"       from "Active"     [2023-12-19 Tue 17:58]
- State "DONE"       from "Active"     [2023-12-18 Mon 19:55]
- State "DONE"       from "Active"     [2023-12-17 Sun 18:14]
- State "DONE"       from "ACTIVE"     [2023-12-16 Sat 16:37]
- State "DONE"       from "ACTIVE"     [2023-12-15 Fri 16:21]
- State "DONE"       from "ACTIVE"     [2023-12-14 Thu 18:19]
- State "DONE"       from "ACTIVE"     [2023-12-12 Tue 19:19]
- State "DONE"       from "ACTIVE"     [2023-12-12 Tue 19:18]
- State "DONE"       from "ACTIVE"     [2023-12-11 Mon 18:20]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:50]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:49]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:31]
- State "DONE"       from "ACTIVE"     [2023-12-06 Wed 16:11]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:23]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:09]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:21]
- State "DONE"       from "ACTIVE"     [2023-11-30 Thu 15:34]
- State "DONE"       from "ACTIVE"     [2023-11-29 Wed 18:15]
- State "DONE"       from "ACTIVE"     [2023-11-27 Mon 17:34]
- State "DONE"       from "ACTIVE"     [2023-11-24 Fri 14:56]
- State "DONE"       from "ACTIVE"     [2023-11-23 Thu 15:53]
- State "DONE"       from "ACTIVE"     [2023-11-22 Wed 14:18]
- State "DONE"       from "ACTIVE"     [2023-11-21 Tue 18:09]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:20]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:20]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:19]
:LOGBOOK:
CLOCK: [2023-10-12 Thu 08:33]--[2023-10-12 Thu 10:58] =>  2:25
:END:

Genuine (original, authentic)
Have undisputed origin, independly verified,
and objectively authenticated.

about how the program works are:
1) is the _source code and embedded documentation_;
2) the simplified version usually provided by official documentation;
   - in most cases the latter included in a particular package;
   - usually it is available through =Emacs= *info system*;

--* INIT Conclusion*: the wisest decision is just to use it properly!

* Deliberate practice
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-15 Sat 19:14]
:END:
- State "AMPLE"      from ""           [2024-06-15 Sat 19:14]
- State "AMPLE"      from ""           [2024-06-14 Fri 20:05]
- State "AMPLE"      from ""           [2024-06-13 Thu 17:26]
- State "AMPLE"      from ""           [2024-06-11 Tue 19:05]
- State "AMPLE"      from ""           [2024-06-11 Tue 19:04]
- State "AMPLE"      from ""           [2024-06-09 Sun 19:03]
- State "AMPLE"      from ""           [2024-06-08 Sat 18:01]
- State "AMPLE"      from ""           [2024-06-07 Fri 19:27]
- State "AMPLE"      from ""           [2024-06-06 Thu 19:41]
- State "AMPLE"      from ""           [2024-06-05 Wed 19:26]
- State "AMPLE"      from ""           [2024-06-04 Tue 19:05]
- State "AMPLE"      from ""           [2024-06-03 Mon 19:56]
- State "AMPLE"      from ""           [2024-06-02 Sun 18:05]
- State "AMPLE"      from ""           [2024-05-30 Thu 19:50]
- State "AMPLE"      from ""           [2024-05-29 Wed 17:21]
- State "AMPLE"      from ""           [2024-05-28 Tue 19:04]
- State "AMPLE"      from ""           [2024-05-27 Mon 18:23]
- State "AMPLE"      from ""           [2024-05-26 Sun 19:32]
- State "AMPLE"      from ""           [2024-05-25 Sat 17:03]
- State "AMPLE"      from ""           [2024-05-24 Fri 19:55]
- State "AMPLE"      from ""           [2024-05-23 Thu 18:13]
- State "AMPLE"      from ""           [2024-05-22 Wed 18:04]
- State "AMPLE"      from ""           [2024-05-21 Tue 18:29]
- State "AMPLE"      from ""           [2024-05-20 Mon 17:28]
- State "AMPLE"      from ""           [2024-05-17 Fri 19:09]
- State "AMPLE"      from ""           [2024-05-16 Thu 16:40]
- State "AMPLE"      from ""           [2024-05-15 Wed 18:25]
- State "AMPLE"      from ""           [2024-05-14 Tue 18:09]
- State "AMPLE"      from ""           [2024-05-13 Mon 18:57]
- State "AMPLE"      from ""           [2024-05-12 Sun 18:23]
- State "AMPLE"      from ""           [2024-05-11 Sat 12:39]
- State "AMPLE"      from ""           [2024-05-10 Fri 18:02]
- State "AMPLE"      from ""           [2024-05-09 Thu 18:20]
- State "AMPLE"      from ""           [2024-05-08 Wed 18:53]
- State "AMPLE"      from ""           [2024-05-07 Tue 18:42]
- State "AMPLE"      from ""           [2024-05-06 Mon 18:11]
- State "AMPLE"      from ""           [2024-05-04 Sat 19:16]
- State "AMPLE"      from ""           [2024-05-03 Fri 13:59]
- State "AMPLE"      from ""           [2024-04-24 Wed 18:51]
- State "AMPLE"      from ""           [2024-04-23 Tue 19:36]
- State "AMPLE"      from ""           [2024-04-22 Mon 19:30]
- State "AMPLE"      from ""           [2024-04-17 Wed 19:22]
- State "AMPLE"      from "RETARD"     [2024-01-28 Sun 17:20]
- State "AMPLE"      from "RETARD"     [2024-01-27 Sat 15:21]
- State "AMPLE"      from ""           [2024-01-26 Fri 18:48]
- State "AMPLE"      from "DELAY"      [2024-01-25 Thu 18:36]
- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-17 Wed 17:17]
- State "DONE"       from "Active"     [2024-01-16 Tue 15:21]
- State "DONE"       from "Active"     [2024-01-14 Sun 12:39]
- State "DONE"       from "Active"     [2024-01-11 Thu 15:59]
- State "DONE"       from "Active"     [2024-01-10 Wed 15:13]
- State "DONE"       from "Active"     [2024-01-09 Tue 15:40]
- State "DONE"       from "Active"     [2024-01-04 Thu 15:01]
- State "DONE"       from "Active"     [2023-12-27 Wed 15:44]
- State "DONE"       from "Active"     [2023-12-26 Tue 15:59]
- State "DONE"       from "Active"     [2023-12-25 Mon 13:22]
- State "DONE"       from "Active"     [2023-12-22 Fri 16:44]
- State "DONE"       from "Active"     [2023-12-21 Thu 17:38]
- State "DONE"       from "Active"     [2023-12-20 Wed 09:52]
- State "DONE"       from "Active"     [2023-12-19 Tue 17:58]
- State "DONE"       from "Active"     [2023-12-18 Mon 19:55]
- State "DONE"       from "Active"     [2023-12-17 Sun 18:14]
- State "DONE"       from "ACTIVE"     [2023-12-16 Sat 16:37]
- State "DONE"       from "ACTIVE"     [2023-12-15 Fri 16:21]
- State "DONE"       from "ACTIVE"     [2023-12-14 Thu 18:19]
- State "DONE"       from "ACTIVE"     [2023-12-13 Wed 17:47]
- State "DONE"       from "ACTIVE"     [2023-12-12 Tue 19:19]
- State "DONE"       from "ACTIVE"     [2023-12-11 Mon 18:20]
- State "DONE"       from "ACTIVE"     [2023-12-10 Sun 18:52]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:50]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:31]
- State "DONE"       from "ACTIVE"     [2023-12-06 Wed 16:11]
- State "DONE"       from "ACTIVE"     [2023-12-05 Tue 14:58]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:09]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:21]
- State "DONE"       from "ACTIVE"     [2023-11-30 Thu 15:34]
- State "DONE"       from "ACTIVE"     [2023-11-29 Wed 18:15]
- State "DONE"       from "ACTIVE"     [2023-11-28 Tue 15:11]
- State "DONE"       from "ACTIVE"     [2023-11-27 Mon 17:35]
- State "DONE"       from "ACTIVE"     [2023-11-27 Mon 10:03]
- State "DONE"       from "ACTIVE"     [2023-11-24 Fri 14:56]
- State "AMPLE"      from "RAW"        [2023-11-24 Fri 09:22]
- State "AMPLE"      from "RAW"        [2023-11-24 Fri 09:21]
- State "AMPLE"      from ""           [2023-11-24 Fri 09:19]
- State "AMPLE"      from ""           [2023-11-24 Fri 09:19]
- State "AMPLE"      from ""           [2023-11-24 Fri 09:18]
- State "AMPLE"      from ""           [2023-11-24 Fri 09:18]
- State "AMPLE"      from ""           [2023-11-24 Fri 09:18]
- Note taken on [2023-11-24 Fri 08:41] \\
  First (DP1) session usually implemented a brief ~commands~ overview with
  *Apropos* mixed with documentation reading and attemts to run these
  commands.
:LOGBOOK:
CLOCK: [2023-11-24 Fri 08:31]--[2023-11-24 Fri 09:02] =>  0:31
:END:
- State "DONE"       from "ACTIVE"     [2023-11-23 Thu 11:38]
- State "DONE"       from "ACTIVE"     [2023-11-22 Wed 14:18]
- State "DONE"       from "ACTIVE"     [2023-11-21 Tue 18:09]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:20]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:19]
when you do challenging but indispensable tasks by yourself

* [#A] DeepLearning AI
SCHEDULED: <2024-06-16 Sun>
:LOGBOOK:
CLOCK: [2024-06-14 Fri 09:00]--[2024-06-14 Fri 09:24] =>  0:24
:END:
- https://www.deeplearning.ai/ ==> Start Learning ==> Sign In (with
  Google)
- https://learn.deeplearning.ai/courses/chatgpt-prompt-eng/lesson/1/introduction
- Have a joy!


* Emacs

** [#A] Counsel
SCHEDULED: <2024-06-16 Sun ++2d>
- Note taken on [2024-06-14 Fri 08:56] \\
  Key bindings for navigation in ivy minibuffer

  C-n (ivy-next-line) selects the next candidate
  C-p (ivy-previous-line) selects the previous candidate
  M-< (ivy-beginning-of-buffer) selects the first candidate
  M-> (ivy-end-of-buffer) selects the last candidate
  C-v (ivy-scroll-up-command) scrolls up by ivy-height lines
  M-v (ivy-scroll-down-command) scrolls down by ivy-height lines
:LOGBOOK:
CLOCK: [2024-06-14 Fri 07:52]--[2024-06-14 Fri 08:50] =>  0:58
:END:
[[elisp:(apropos-command "counsel")]]
** Init [#B] Help about *Help*
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-07 Fri 19:27]
:CATEGORY: Emacs
:END:
- State "AMPLE"      from "RAW"        [2024-06-07 Fri 19:27]
- State "AMPLE"      from "RAW"        [2024-06-06 Thu 19:41]
- State "DONE"       from "Active"     [2024-01-30 Tue 14:56]
- Note taken on [2024-01-24 Wed 14:21] \\
  Open two Info buffers:
  M-n
  Help buffer:
  M-x rename-uniquely to rename buffer with a similar name.
  M-x clone-buffer;

[[file:~/git/annelida/ballyboe/org-blog/2024-05-26-Emacs-help-about-help.org::*The list of commands, which began with C-h prefix][The list of commands, which began with C-h prefix]]
[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Help-Summary.html]]

- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-17 Wed 17:17]
- State "DONE"       from "Active"     [2024-01-16 Tue 15:21]
- State "DONE"       from "Active"     [2024-01-14 Sun 12:39]
- State "DONE"       from "Active"     [2024-01-11 Thu 15:59]
- State "DONE"       from "Active"     [2024-01-10 Wed 15:13]
- State "DONE"       from "Active"     [2024-01-09 Tue 15:40]
- State "DONE"       from "Active"     [2024-01-04 Thu 15:02]
- State "DONE"       from "Active"     [2023-12-27 Wed 15:43]
- State "DONE"       from "Active"     [2023-12-26 Tue 15:59]
- State "DONE"       from "Active"     [2023-12-25 Mon 13:22]
- State "DONE"       from "Active"     [2023-12-22 Fri 16:44]
- State "DONE"       from "Active"     [2023-12-21 Thu 17:38]
- State "DONE"       from "Active"     [2023-12-20 Wed 09:52]
- State "DONE"       from "Active"     [2023-12-19 Tue 17:58]
- State "DONE"       from "Active"     [2023-12-18 Mon 19:55]
- State "DONE"       from "ACTIVE"     [2023-12-16 Sat 16:43]
- State "DONE"       from "ACTIVE"     [2023-12-16 Sat 16:38]
- State "DONE"       from "ACTIVE"     [2023-12-15 Fri 16:21]
- State "DONE"       from "ACTIVE"     [2023-12-14 Thu 18:19]
- State "DONE"       from "ACTIVE"     [2023-12-13 Wed 17:47]
- State "DONE"       from "ACTIVE"     [2023-12-11 Mon 18:25]
- State "DONE"       from "ACTIVE"     [2023-12-11 Mon 18:20]
- State "DONE"       from "ACTIVE"     [2023-12-10 Sun 18:52]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:53]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:31]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:31]
- State "DONE"       from "ACTIVE"     [2023-12-06 Wed 16:11]
- State "DONE"       from "ACTIVE"     [2023-12-05 Tue 14:58]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:09]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:21]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:21]
- State "DONE"       from "ACTIVE"     [2023-11-30 Thu 09:40]
- State "DONE"       from "ACTIVE"     [2023-11-29 Wed 18:16]
- State "DONE"       from "ACTIVE"     [2023-11-28 Tue 11:55]
- State "DONE"       from "ACTIVE"     [2023-11-24 Fri 14:56]
- State "DONE"       from "ACTIVE"     [2023-11-23 Thu 10:44]
- Note taken on [2023-11-23 Thu 09:28] \\

    [[info:emacs#Help][emacs#Help]]
- State "DONE"       from "ACTIVE"     [2023-11-22 Wed 08:42]
:LOGBOOK:
CLOCK: [2024-05-27 Mon 09:13]--[2024-05-27 Mon 09:39] =>  0:26
CLOCK: [2024-05-27 Mon 08:50]--[2024-05-27 Mon 09:06] =>  0:16
CLOCK: [2024-05-26 Sun 15:58]--[2024-05-26 Sun 16:38] =>  0:40
CLOCK: [2024-01-30 Tue 10:19]--[2024-01-30 Tue 10:29] =>  0:10
CLOCK: [2024-01-30 Tue 09:46]--[2024-01-30 Tue 09:46] =>  0:00
CLOCK: [2024-01-24 Wed 13:36]--[2024-01-24 Wed 14:21] =>  0:45
CLOCK: [2024-01-24 Wed 13:35]--[2024-01-24 Wed 13:36] =>  0:01
CLOCK: [2023-12-18 Mon 15:09]--[2023-12-18 Mon 16:11] =>  1:02
CLOCK: [2023-12-14 Thu 08:53]--[2023-12-14 Thu 09:30] =>  0:37
CLOCK: [2023-11-23 Thu 09:12]--[2023-11-23 Thu 09:47] =>  0:35
CLOCK: [2023-11-22 Wed 07:20]--[2023-11-22 Wed 08:36] =>  1:16
:END:

- State "DONE"       from "ACTIVE"     [2023-11-21 Tue 18:09]
- State "DONE"       from "ACTIVE"     [2023-11-17 Fri 15:23]
- OBState "DONE"       from "ACTIVE"     [2023-11-17 Fri 15:22]
- State "DONE"       from "ACTIVE"     [2023-11-12 Sun 13:59]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:20]
Initially all software was used by the ancient (true) users by its
/innate (embedded) documentation/, ~without~ any Google and
Stack-Overflow suggestions and notes. Bear this fact in mind do your
job as it would be done in a sure and fire manner.

*** DELAY [#A] *Python* embedded help system
SCHEDULED: <2024-06-17 Mon ++2d/3d>
:PROPERTIES:
:LAST_REPEAT: [2024-05-12 Sun 18:24]
:CATEGORY: Python
:END:
- State "AMPLE"      from "DELAY"      [2024-05-12 Sun 18:24]
:LOGBOOK:
CLOCK: [2024-03-07 Thu 10:40]--[2024-03-07 Thu 10:57] =>  0:17
:END:
- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-16 Tue 15:22]
- State "DONE"       from "Active"     [2024-01-14 Sun 12:40]
- State "DONE"       from "Active"     [2024-01-09 Tue 15:40]
- State "DONE"       from "ACTIVE"     [2023-12-13 Wed 17:47]
- State "DONE"       from "ACTIVE"     [2023-12-11 Mon 18:20]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:53]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:31]
- State "DONE"       from "ACTIVE"     [2023-12-05 Tue 14:58]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:10]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:22]
- State "DONE"       from "ACTIVE"     [2023-11-29 Wed 18:16]
- State "DONE"       from "ACTIVE"     [2023-11-27 Mon 17:35]
- State "DONE"       from "ACTIVE"     [2023-11-23 Thu 11:38]
- State "DONE"       from "ACTIVE"     [2023-11-21 Tue 18:09]
- State "DONE"       from "ACTIVE"     [2023-11-19 Sun 12:38]
- State "DONE"       from "ACTIVE"     [2023-11-17 Fri 07:54]
- State "DONE"       from "ACTIVE"     [2023-11-13 Mon 14:17]
- State "DONE"       from "ACTIVE"     [2023-11-11 Sat 17:14]
- State "DONE"       from "ACTIVE"     [2023-11-09 Thu 18:41]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:21]
*** *Selenium* package review
SCHEDULED: <2024-06-18 Tue ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-05-26 Sun 19:32]
:END:
- State "AMPLE"      from ""           [2024-05-26 Sun 19:32]
- State "AMPLE"      from ""           [2024-05-25 Sat 17:03]
- State "AMPLE"      from ""           [2024-05-24 Fri 19:55]
- State "AMPLE"      from "Init"       [2024-03-14 Thu 18:04]
- State "AMPLE"      from "DELAY"      [2024-02-28 Wed 18:57]
- State "AMPLE"      from "DELAY"      [2024-02-26 Mon 17:57]
- State "AMPLE"      from ""           [2024-02-26 Mon 17:56]
:LOGBOOK:
CLOCK: [2024-02-27 Tue 08:27]--[2024-02-27 Tue 08:59] =>  0:32
CLOCK: [2024-02-26 Mon 07:39]--[2024-02-26 Mon 08:37] =>  0:58
:END:
- State "AMPLE"      from "RAW"        [2024-01-25 Thu 18:21]
- State "AMPLE"      from "DP1"        [2024-01-25 Thu 18:21]
- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-04 Thu 11:27]
- State "DONE"       from "Active"     [2024-01-04 Thu 11:27]
- State "DONE"       from "ACTIVE"     [2023-11-28 Tue 11:55]
- State "DONE"       from "ACTIVE"     [2023-11-28 Tue 11:55]
- State "DONE"       from "ACTIVE"     [2023-11-27 Mon 17:35]
- State "DONE"       from "ACTIVE"     [2023-11-24 Fri 14:56]
- State "DONE"       from "ACTIVE"     [2023-11-23 Thu 11:38]
- State "DONE"       from "ACTIVE"     [2023-11-22 Wed 14:18]
- State "DONE"       from "ACTIVE"     [2023-11-21 Tue 18:10]
- State "DONE"       from "ACTIVE"     [2023-11-20 Mon 16:20]
- State "DONE"       from "ACTIVE"     [2023-11-19 Sun 12:38]
- State "DONE"       from "ACTIVE"     [2023-11-18 Sat 13:18]
- State "DONE"       from "ACTIVE"     [2023-11-12 Sun 13:59]
- State "DONE"       from "ACTIVE"     [2023-11-09 Thu 18:41]
- State "DONE"       from "ACTIVE"     [2023-11-08 Wed 13:33]
- State "DONE"       from "ACTIVE"     [2023-11-07 Tue 18:21]
- Place in OS filesystem;
  - Accessibility through =venvs=;
- Its structure;
  - features;
- Content;
- Source code and =docstrings=

*** AMPLE Emacs' embedded help system
CLOSED: [2023-12-06 Wed 16:11] SCHEDULED: <2023-12-08 Fri>
- Note taken on [2023-10-14 Sat 08:14] \\

  C-h C-h or C-h ? to invoke Emacs built-n key.
  When type the key from the list

  f FUNCTION - describe-function
  Type a function name and get documentation of it.

  i - info. The info documentation reader.

  k KEYS - describe-key.
  Type a command key sequence; it displays the full documentation.

  m - describe-mode. Print documentation of current minor modes,
  and the current major mode, including their special commands.

  t - help-with-tutorial. Select the Emacs learn-by-doing tutorial.

  v - VARIABLE - describe-variable.
  Type name of a variable; it displays the variable's documentation and value
:LOGBOOK:
CLOCK: [2023-10-14 Sat 07:30]--[2023-10-14 Sat 08:27] =>  0:57
:END:
Very straighforward system out from 10 initial keys to use in embedded
*Help* browser.OA To use several *Help* buffers use =M-x raname uniquely=

** RAW [#B] Help about *info*
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-07 Fri 19:27]
:CATEGORY: Emacs
:END:
- State "AMPLE"      from "RAW"        [2024-06-07 Fri 19:27]
- State "AMPLE"      from "RAW"        [2024-06-06 Thu 19:41]
- State "DONE"       from "Active"     [2024-01-30 Tue 14:56]
- State "DONE"       from "Active"     [2024-01-23 Tue 18:38]
- State "DONE"       from "Active"     [2024-01-17 Wed 17:17]
- State "DONE"       from "Active"     [2024-01-16 Tue 15:22]
- State "DONE"       from "Active"     [2024-01-14 Sun 12:40]
- State "DONE"       from "Active"     [2024-01-11 Thu 15:59]
- State "DONE"       from "Active"     [2024-01-10 Wed 15:13]
- State "DONE"       from "Active"     [2024-01-09 Tue 15:40]
- State "DONE"       from "Active"     [2024-01-04 Thu 15:02]
- State "DONE"       from "Active"     [2023-12-27 Wed 15:44]
- State "DONE"       from "Active"     [2023-12-26 Tue 15:59]
- State "DONE"       from "Active"     [2023-12-25 Mon 13:22]
- State "DONE"       from "Active"     [2023-12-22 Fri 16:44]
- State "DONE"       from "Active"     [2023-12-21 Thu 17:39]
- State "DONE"       from "Active"     [2023-12-18 Mon 19:56]
- State "DONE"       from "Active"     [2023-12-17 Sun 18:14]
- State "DONE"       from "ACTIVE"     [2023-12-16 Sat 16:38]
- State "DONE"       from "ACTIVE"     [2023-12-15 Fri 16:21]
- State "DONE"       from "ACTIVE"     [2023-12-13 Wed 17:47]
- State "DONE"       from "ACTIVE"     [2023-12-12 Tue 19:19]
- State "DONE"       from "ACTIVE"     [2023-12-10 Sun 18:52]
- State "DONE"       from "ACTIVE"     [2023-12-10 Sun 18:52]
- State "DONE"       from "ACTIVE"     [2023-12-09 Sat 17:51]
- State "DONE"       from "ACTIVE"     [2023-12-07 Thu 19:32]
- State "DONE"       from "ACTIVE"     [2023-12-05 Tue 14:58]
- State "DONE"       from "ACTIVE"     [2023-12-04 Mon 11:10]
- State "DONE"       from "ACTIVE"     [2023-12-01 Fri 17:23]
- State "DONE"       from "ACTIVE"     [2023-11-30 Thu 15:34]
- State "DONE"       from "ACTIVE"     [2023-11-29 Wed 18:16]
- State "DONE"       from "ACTIVE"     [2023-11-28 Tue 14:36]
- Note taken on [2023-10-14 Sat 08:47] \\
  To open Emacs Info use C-h-i or C-h-r
  [[help:Enabled][Help about *info*]]
:LOGBOOK:
CLOCK: [2024-05-28 Tue 09:52]--[2024-05-28 Tue 10:12] =>  0:20
CLOCK: [2024-05-27 Mon 09:47]--[2024-05-27 Mon 10:28] =>  0:41
CLOCK: [2024-01-31 Wed 13:16]--[2024-01-31 Wed 13:46] =>  0:30
CLOCK: [2024-01-30 Tue 09:46]--[2024-01-30 Tue 10:19] =>  0:33
CLOCK: [2023-12-18 Mon 16:11]--[2023-12-18 Mon 16:26] =>  0:15
CLOCK: [2023-12-14 Thu 08:16]--[2023-12-14 Thu 08:50] =>  0:34
CLOCK: [2023-11-28 Tue 11:26]--[2023-11-28 Tue 11:54] =>  0:28
CLOCK: [2023-11-27 Mon 10:20]--[2023-11-27 Mon 11:57] =>  1:37
CLOCK: [2023-10-14 Sat 08:45]--[2023-10-14 Sat 09:18] =>  0:33
:END:
Mostly the similar approach with several quirks
[[file:~/git/annelida/ballyboe/org-blog/2024-05-26-Emacs-help-about-help.org::*The list of commands, which began with C-h prefix][The list of commands, which began with C-h prefix and Info commands]]

* Task decomposition
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-15 Sat 19:14]
:END:
- State "AMPLE"      from ""           [2024-06-15 Sat 19:14]
- State "AMPLE"      from ""           [2024-06-14 Fri 20:03]
- State "AMPLE"      from ""           [2024-06-13 Thu 17:26]
- State "AMPLE"      from ""           [2024-06-11 Tue 19:05]
- State "AMPLE"      from ""           [2024-06-11 Tue 19:04]
- State "AMPLE"      from ""           [2024-06-09 Sun 19:03]
- State "AMPLE"      from ""           [2024-06-08 Sat 18:01]
- State "AMPLE"      from ""           [2024-06-07 Fri 19:27]
- State "AMPLE"      from ""           [2024-06-06 Thu 19:41]
- State "AMPLE"      from ""           [2024-06-05 Wed 19:26]
- State "AMPLE"      from ""           [2024-06-04 Tue 19:05]
- State "AMPLE"      from ""           [2024-06-03 Mon 19:56]
- State "AMPLE"      from ""           [2024-06-02 Sun 18:05]
- State "AMPLE"      from ""           [2024-05-30 Thu 19:50]
- State "AMPLE"      from ""           [2024-05-29 Wed 17:21]
- State "AMPLE"      from ""           [2024-05-28 Tue 19:04]
- State "AMPLE"      from ""           [2024-05-27 Mon 18:23]
- State "AMPLE"      from ""           [2024-05-26 Sun 19:32]
:LOGBOOK:
CLOCK: [2024-05-24 Fri 10:59]--[2024-05-24 Fri 11:30] =>  0:31
CLOCK: [2024-05-24 Fri 09:44]--[2024-05-24 Fri 10:43] =>  0:59
:END:

Split the whole task into several digestible chunks in your agenda.

* DONE [#A] Clocking
CLOSED: [2023-10-25 Wed 16:15] SCHEDULED: <2023-10-28 Sat>
[[info:org#Clocking Work Time][org#Clocking Work Time]]

* AMPLE The Absolute Beginner
SCHEDULED: <2024-05-24 Fri>
:LOGBOOK:
CLOCK: [2023-10-20 Fri 10:26]--[2023-10-20 Fri 13:17] =>  2:51
CLOCK: [2023-10-19 Thu 08:48]--[2023-10-19 Thu 09:14] =>  0:26
:END:
Guide to Emacs --> Just watch it 25 minutes
And *notice* the details, please!
[[https://www.youtube.com/watch?v=48JlgiBpw_I]]
https://www.youtube.com/watch?v=bEfYm8sAaQg

* Computer Science
:PROPERTIES:
:CATEGORY: CS
:END:

** [#A] Abstract data types
SCHEDULED: <2024-06-16 Sun>
** [#A] Data structures in CS
SCHEDULED: <2024-06-16 Sun ++1d>
:PROPERTIES:
:LAST_REPEAT: [2024-06-12 Wed 17:11]
:END:
- State "AMPLE"      from ""           [2024-06-12 Wed 17:11]
- State "AMPLE"      from ""           [2024-06-09 Sun 19:03]
- State "AMPLE"      from ""           [2024-06-08 Sat 18:01]
:LOGBOOK:
CLOCK: [2024-06-08 Sat 08:31]--[2024-06-08 Sat 09:00] =>  0:29
CLOCK: [2024-06-08 Sat 07:46]--[2024-06-08 Sat 08:17] =>  0:31
CLOCK: [2024-06-07 Fri 07:26]--[2024-06-07 Fri 08:02] =>  0:36
CLOCK: [2024-06-04 Tue 08:56]--[2024-06-04 Tue 09:45] =>  0:49
CLOCK: [2024-06-04 Tue 07:33]--[2024-06-04 Tue 07:36] =>  0:03
CLOCK: [2024-06-03 Mon 14:29]--[2024-06-03 Mon 15:34] =>  1:05
:END:
https://realpython.com/python-data-structures/#toc
[[https://www.geeksforgeeks.org/learn-data-structures-and-algorithms-dsa-tutorial/?utm_source=Website&utm_medium=Landing+Page+Click&utm_campaign=DSA+Page+Tracker&utm_id=DSA-Page-Tracker&utm_term=DSA+Page+Promo&utm_content=Course+Page]]


[[https://www.google.com/search?sca_esv=23c20ded85caa685&sca_upv=1&rlz=1CAEVJI_enIE1052IE1052&sxsrf=ADLYWIJKE5tyu2xXIkJ_acM8r-H_U6Ag4A:1717614638700&q=classification+of+data+structure&uds=ADvngMgXnVvsl8yyzlPcgBCE61H3vAKHLfcD15kL8ywWHO4imniB0wX1vY5TtKJFvh_zHBF97v1vcoO1A2dB1hCtcfAOo-KBtJ993TxgDeqsRmrxM_7GPQwwFjU1FytO1sJd0HbU2VyW4bVbLwvzC4MxRZSzooke7SWB3Sjk9sCQOT56bH6Q4tQsZwNF_g9IekOnRe9LH5dw5uH3SLcMSXz7o042Z0z23pncXMwtt_mNa4sPzvFyqxt4JpNilVtEXb7K5z9rVrt06P4DK7H1mND8Buvrgf7jFzuO-oAvin70Z3F0qO7Q3ouN8Pe22WAorNvINnfvsGbSAtvYwocylAX92ukp3kfJDKCdrrcV9yeX5ruyNllLtQPRz-uKAE1F0JHTwWJ5a7HG&udm=2&sa=X&ved=2ahUKEwjW7piTlcWGAxVjUUEAHSKmBYYQxKsJegQICRAB&ictx=0&biw=1181&bih=577&dpr=1.63#vhid=54bkx4PGJNilXM&vssid=mosaic]]

[[file:~/git/annelida/ballyboe/org-blog/2024-06-05-data-structures-in-cs.org::*Glossary][Data structures]]

[[https://www.geeksforgeeks.org/hash-functions-and-list-types-of-hash-functions/]]
[[https://www.bbc.co.uk/bitesize/guides/zghbgk7/revision/2]]

*** [#B] Dictionaries, Maps, and Hash Tables
SCHEDULED: <2024-06-19 Wed ++1w>
:PROPERTIES:
:LAST_REPEAT: [2024-06-12 Wed 17:11]
:END:
- State "AMPLE"      from ""           [2024-06-12 Wed 17:11]
*** [#A] Array Data Structures
SCHEDULED: <2024-06-19 Wed ++1w>
:PROPERTIES:
:LAST_REPEAT: [2024-06-12 Wed 10:57]
:END:
- State "AMPLE"      from ""           [2024-06-12 Wed 10:57]
:LOGBOOK:
CLOCK: [2024-06-12 Wed 10:18]--[2024-06-12 Wed 10:53] =>  0:35
CLOCK: [2024-06-10 Mon 14:23]--[2024-06-10 Mon 14:39] =>  0:16
CLOCK: [2024-06-09 Sun 07:27]--[2024-06-09 Sun 08:47] =>  1:20
:END:

[[https://www.geeksforgeeks.org/introduction-to-arrays-data-structure-and-algorithm-tutorials/]]
*** [#A] Linked lists
SCHEDULED: <2024-06-16 Sun>

https://www.geeksforgeeks.org/singly-linked-list-definition-meaning-dsa/?ref=outind

** [#C] Algorithms in CS
SCHEDULED: <2024-06-16 Sun ++1w>
:PROPERTIES:
:LAST_REPEAT: [2024-06-09 Sun 19:01]
:END:
- State "AMPLE"      from ""           [2024-06-09 Sun 19:01]
:LOGBOOK:
CLOCK: [2024-06-09 Sun 08:57]--[2024-06-09 Sun 09:49] =>  0:52
CLOCK: [2024-06-08 Sat 09:11]--[2024-06-08 Sat 09:38] =>  0:27
CLOCK: [2024-06-06 Thu 07:21]--[2024-06-06 Thu 08:20] =>  0:59
:END:

https://www.geeksforgeeks.org/fundamentals-of-algorithms/?ref=shm
[[file:~/git/annelida/ballyboe/org-blog/2024-06-06-algorithms-in-computer-science.org::*Preamble][Algorithms in CS]]
[[https://www.bbc.co.uk/bitesize/guides/zpp49j6/revision/2]]

*** Init [#A] Searching algorithms
SCHEDULED: <2024-06-16 Sun>
:LOGBOOK:
CLOCK: [2024-06-10 Mon 08:09]--[2024-06-10 Mon 08:32] =>  0:23
CLOCK: [2024-06-10 Mon 07:23]--[2024-06-10 Mon 08:01] =>  0:38
:END:

https://www.geeksforgeeks.org/searching-algorithms/

*** DELAY [#B] Sorting algorithms
SCHEDULED: <2024-06-20 Thu ++1w>
:PROPERTIES:
:LAST_REPEAT: [2024-06-13 Thu 17:01]
:END:
- State "AMPLE"      from "DELAY"      [2024-06-13 Thu 17:01]
:LOGBOOK:
CLOCK: [2024-06-13 Thu 09:44]--[2024-06-13 Thu 09:46] =>  0:02
CLOCK: [2024-06-13 Thu 09:37]--[2024-06-13 Thu 09:39] =>  0:02
CLOCK: [2024-06-12 Wed 09:16]--[2024-06-12 Wed 10:13] =>  0:57
CLOCK: [2024-06-10 Mon 08:50]--[2024-06-10 Mon 09:15] =>  0:25
:END:

https://www.geeksforgeeks.org/sorting-algorithms/

** [#C] Algorithm's Time Complexity O(n)
SCHEDULED: <2024-06-20 Thu ++1w>
:PROPERTIES:
:CATEGORY: O(1)
:LAST_REPEAT: [2024-06-13 Thu 17:13]
:END:
- State "AMPLE"      from ""           [2024-06-13 Thu 17:13]
- Note taken on [2024-06-06 Thu 08:58] \\
  An algorithm's time complexity of O(n) refers to a linear time
  complexity. This means that the running time of the algorithm
  increases linearly with the size of the input. In other words, the
  time taken by the algorithm to execute grows directly with the size of
  the input, and the time complexity is proportional to the input size.
:LOGBOOK:
CLOCK: [2024-06-13 Thu 09:27]--[2024-06-13 Thu 09:30] =>  0:03
CLOCK: [2024-06-06 Thu 08:51]--[2024-06-06 Thu 09:09] =>  0:18
:END:

https://www.w3schools.com/dsa/dsa_data_arrays.php
https://www.geeksforgeeks.org/learn-data-structures-and-algorithms-dsa-tutorial/?ref=shm#1-learn-about-complexities

* Python

** [#A] Study Python with unittests
SCHEDULED: <2024-06-16 Sun ++2d>
- Note taken on [2024-06-15 Sat 07:56] \\
  [[info:org#Using Header Arguments][org#Using Header Arguments]]
  https://orgmode.org/manual/Extracting-Source-Code.html#Header-arguments

  #+begin_src :tangle example.py
    print("Hello, World!")
  #+end_src

  #+begin_src python :results output pp
    def hello_world():
        print("Hello, world!")
    hello_world()
  #+end_src

  #+RESULTS:
  : Hello, world!


- Take a look at 0--key/org-pub/2024-06-05-python-fundamentals.org;
- It uses :session and :tangle properties, check up the manual about
  properties in general and about these particular ones as well;
- The test suites are in the body with :results none (to suppress the
  output);
- The next code block evaluates the test suite above and uses the
  property :results output pp frome the file header;
- So, just evaluate the test suite first (C-c C-c inside the code block);
- After that your test suite is inside Babel session;
- So, unittest.main(exit=False) will produce the result of test suite
  evaluation and spit out the relevant results;
- Finally it is possible to launch unittests inside Babel without any
  tangling files at all.



** [#A] Python built-in functions
SCHEDULED: <2024-06-16 Sun>
:LOGBOOK:
CLOCK: [2024-06-12 Wed 16:03]--[2024-06-12 Wed 16:45] =>  0:42
CLOCK: [2024-06-10 Mon 12:44]--[2024-06-10 Mon 13:47] =>  1:03
CLOCK: [2024-06-10 Mon 09:36]--[2024-06-10 Mon 10:02] =>  0:26
CLOCK: [2024-06-05 Wed 10:16]--[2024-06-05 Wed 10:25] =>  0:09
CLOCK: [2024-06-05 Wed 09:55]--[2024-06-05 Wed 10:16] =>  0:21
CLOCK: [2024-06-05 Wed 09:23]--[2024-06-05 Wed 09:36] =>  0:13
:END:
[[/home/vikky/git/0--key/org-pub/2016-09-13-python-built-in-functions.org][Read, comprehend and extend it, please]]

[[file:~/git/annelida/ballyboe/org-blog/2024-06-05-python-built-in-function.org::+BEGIN_EXPORT html][Built-in functions]]

*** Python ~any()~ function
SCHEDULED: <2024-06-19 Wed ++1w>
:PROPERTIES:
:LAST_REPEAT: [2024-06-12 Wed 16:55]
:END:
- State "AMPLE"      from ""           [2024-06-12 Wed 16:55]
https://www.geeksforgeeks.org/python-any-function/?ref=lbp

*** [#A] Python ~ascii()~ built-in function
SCHEDULED: <2024-06-16 Sun>

https://www.geeksforgeeks.org/ascii-in-python/?ref=lbp

** [#A] Set of built-in methods in Python defined for specific data types
SCHEDULED: <2024-06-16 Sun>
