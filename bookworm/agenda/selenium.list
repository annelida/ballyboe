MY PROJECTS    -*- mode: org; -*-
#+AUTHOR:    Viktoriia Kosinova
#+TITLE:     Mental Athlete's Wife ToDo List
#+SUBTITLE:  Life in a plain text
#+EMAIL:     viqsiq@gmail.com
#+LANGUAGE: en
#+STARTUP: showall indent
#+PROPERTY: header-args :comments org
#+CATEGORY: Selenium
#+TODO: RAW INIT TODO ACTIVE | DONE

* RAW Software testing definition and mission.
SCHEDULED: <2023-12-14 Thu ++2w>
:PROPERTIES:
:LAST_REPEAT: [2023-11-16 Thu 11:20]
:END:
- State "DONE"       from "ACTIVE"     [2023-11-16 Thu 11:20]
- State "DONE"       from "ACTIVE"     [2023-11-16 Thu 11:20]
- Note taken on [2023-11-04 Sat 10:47] \\
  Software testing is in sync with the expected software,
  intended to be developed as defined in the business specification.

  The goal of software testing is to find potential errors in the developed
  software.

  Software testing provides confidence and guarantees that the
  product is of a standard to be pushed to production for customers. It is
  significant because these software applications are bound to have errors,
  and identifying them in the early stage saves a great sum of money and
  time.

  • Security: The testing phase case significantly finds the
  vulnerabilities in the software.
 
  • Performance and efficiency of the application.

  • Reputation: For any industry, the consumers are the most important
   part.
:LOGBOOK:
CLOCK: [2023-11-04 Sat 10:45]--[2023-11-04 Sat 11:04] =>  0:19
:END:
** Significance of software testing
** Core concepts of software testing
** Software Testing Process
** Types of software testing
** Manual testing
** Advantages of manual testing
** Disadvantages of manual testing
** Functional and non-functional testing
** Unit testing
** White-Box, Black-Box, and Grey-Box Testing
** Integration testing
** User acceptance testing
** Alpha and beta testing
** System testing
** End-to-end testing
** Sanity testing
** Smoke testing
** Software Development Life Cycle (SDLC)
** Waterfall model
** Waterfall model application
** Advantages of the Waterfall model
** Disadvantages of the waterfall model
** Iterative (and incremental) model
** Iterative and incremental model application
** Advantages of the Iterative and Incremental Model
** Disadvantages of the iterative and incremental model
** Agile methodology – SCRUM
** SCRUM Agile methodology application
** Advantages of SCRUM Agile methodology
** Disadvantages of SCRUM Agile Methodology
** Defect/Bug Life Cycle
** Different states of defect
** Automation in software testing
** Advantages of automation testing
** Conclusion

* INIT [#A] What is Selenium?
SCHEDULED: <2023-12-05 Tue ++2w>
:PROPERTIES:
:LAST_REPEAT: [2023-11-06 Mon 16:06]
:END:
- State "DONE"       from "ACTIVE"     [2023-11-06 Mon 16:06]
- State "DONE"       from "ACTIVE"     [2023-11-06 Mon 16:06]
- Note taken on [2023-10-30 Mon 10:08] \\
  Selenium is Open source test automation tool that provides API/Libraries
  to automate the tests; in turn, it simulates the actions on the browser.
* Components of Selenium
* INIT [#A] What is Selenium WebDriver?
SCHEDULED: <2023-11-30 Thu ++2w>
:PROPERTIES:
:LAST_REPEAT: [2023-11-06 Mon 16:06]
:END:
- State "DONE"       from "ACTIVE"     [2023-11-06 Mon 16:06]
- Note taken on [2023-10-30 Mon 10:15] \\
  Allows direct communication 
  with the browser.
  Selenium WebDriver component provides libraries to automate the browser.
  It accepts the commands, processes, and actions on the browser.
* Selenium for Web Automation
* Locators and Handling Web Elements
* Hybrid Application Automation & Launching Multiple Apps
* Selenium Automation Framework – Part 1
* Selenium Automation Framework – Part 2
* Dockerized Selenium Grid
* DONE [#A] What is Selenium Grid?
CLOSED: [2023-11-06 Mon 15:57]
- Note taken on [2023-10-30 Mon 10:13] \\
  Selenium Grid helps to run the test on multiple machines.
  If you have a specific requirement to run a test against multiple
  browsers and operating systems, consider integrating the Selenium Grid.
* DONE [#A] What is Selenium IDE?
CLOSED: [2023-11-06 Mon 15:57]
- Note taken on [2023-10-30 Mon 10:17] \\
  Selenium IDE (Integrated Development Environment) is a record and
  playback tool.
  It is available as a browser extension or plugin. Selenium IDE helps
  beginners and manual testers to learn more efficiently.
 
* RAW [#A] Features of Selenium IDE
SCHEDULED: <2023-11-30 Thu ++2w>
:PROPERTIES:
:LAST_REPEAT: [2023-11-06 Mon 16:07]
:END:
- State "DONE"       from "ACTIVE"     [2023-11-06 Mon 16:07]
* DONE [#A] Limitations of Selenium IDE
CLOSED: [2023-11-06 Mon 15:57]
- Note taken on [2023-10-31 Tue 09:28] \\
  * Limited Data Testing: Selenium IDE might not be
  ideal for testing scenarios involving extensive
  datasets, making it less suitable for comprehensive
  data-driven testing.

  * Database Interaction: It lacks the capability to directly interact
  with databases, making it
  unable to validate database-related functionalities.

  * Dynamic Web Applications: Selenium IDE struggles with handling
  dynamic components within web-based applications, potentially
  leading to inaccuracies in testing results.

  * No Screenshot Capture on Failures: Unlike some other testing tools,
  Selenium IDE doesn’t offer built-in functionality to automatically
  capture screenshots when a test case fails, potentially hindering
  troubleshooting.

  * No Result Report Generation: Selenium IDE lacks the feature to
  generate comprehensive   result reports, making it challenging to
  review and share detailed testing outcomes.

* TODO Selenium IDE Features in Detail
SCHEDULED: <2023-11-30 Thu>
- Note taken on [2023-11-06 Mon 09:43] \\
  Selenium Projects are always saved with .side extension.

  Once you save the project, you can always open it next time.
  Furthermore, the project is not browser dependent which means
  you can save the Selenium IDE project(side) using the Chrome browser
  and open it on the Firefox browse.

  The Selenium IDE also provides options to assert.
  You can use other options like Mouse over, Verify,
  WaitFor and Store.
  You can convert the Recorded test into C#, Java, JavaScript,
  Python or Ruby test cases, just by clicking the export option.
* Adding a new test using the Selenium IDE
* Save Selenium IDE Tests
* Selenium IDE Test Execution
* Selenium IDE Debugging Options
* Command Details Section
* Additional options available in Selenium IDE
* Adding Assertions using Selenium IDE
* Convert Selenium IDE command to Any Programming Language Automation Test
* Wrapping Up
