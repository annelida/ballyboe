#+AUTHOR:    Viktoriia Kosinova
#+TITLE:     Mental Athlete's Wife ToDo List
#+SUBTITLE:  Life in a plain text
#+EMAIL:     viqsiq@gmail.com
#+LANGUAGE: en
#+STARTUP: showall indent
#+PROPERTY: header-args :comments org

* Glossary

#+begin_quote
an alphabetical list of /terms or words found in _or relating_ to a
specific subject/, text, or dialect, with explanations; a brief
dictionary.
#+end_quote

Naturally it should be filled up /initially/ without an alphabetical
order; and later rearranged into it. The most effective way to
accomplish the task is to utilize ~org-capture~ faculties.

Predictably that the single word or term contains a handful related
words or terms to define it; the /tree-like structure/ of ~Org~ file
allows to visualize this relationship with no interruptions.


** Computer

Answer
A computer is a programmable device that stores, retrieves, and
processes data.

A computer is a machine or device that performs processes,
calculations and operations based on instructions provided by a
software or hardware program.

** Software

Is a collection of computer programs, instructions and data used to
operate computers and execute specific tasks.

** Hardware

Is a computer's physical elements including its internal and external
devices.

** Computer program

A computer program is a sequence or set of instructions in a
programming language for a computer to execute.

It is one component of software, which also includes documentation and
other *intangible* components.

** Source code

Is a computer program in its *human-readable* form written in a
specific programming language that sets exact rules and specifications
for the computer.

The "program" is the set of instructions that the computer executes,
and the "source code" is the human-readable version of those
instructions.

** Science

Science is a rigorous, systematic study that builds and organizes
knowledge in the form explanations about the world.

** Computer Science

Computer science is the study of computers and computing, including
their theoretical and algorithmic foundations, hardware and software,
and their uses for processing information.

** The Big-O Notation

Is a way to describe the speed or complexity of a given algorithm. If
your current project demands a predefined algorithm, it's important to
understand how fast or slow it is compared to other options.

** Systems programming

System is “a set of things working together as parts of a mechanism or
an interconnecting network.”

Systems programming involves the development of the individual pieces
of software that allow the entire system to function as a single unit.

** GUI

A graphical user interface (GUI) is a digital interface in which a
user interacts with graphical components such as icons, buttons, and
menus. In a GUI, the visuals displayed in the user interface convey
information relevant to the user, as well as actions that they can
take.

** Pseudocode

Pseudocode is human-friendly code that cannot be understood by a
machine. Pseudocode expresses computational process.

** Model

Is a set of concepts that represents a problem and its
characteristics.


Principle

A principle is a basic rule, belief or idea that guides you.

** Logic

The thought processes that have been established as leading to valid
solutions to problems.

** Deliberate practice

Is a system of repetitive consciouos activities that are conducted for
improving an idividual's skills and performance. It is demand many
mind efforts, maximum focus, patience and have no immediate effect.

** Software testing

#+begin_quote
Is a method to check whether the actual software product matches
expected requirement and to ensure that software product is Defect
free.
#+end_quote

Is a approach to examination whether the certain software product
matches expected requirement and to ensure that the software product
is Defect free.

** Unit testing

Refers to tests that verify the functionlity of a specific section of
code to ensure that the specific function works as expected.

** Integrating testing

Is the phase in software testing in which individuals software modules
are compined and test as group with goal  to check their compatibility.

** Acceptance testing

Is a test conducted to determine if the requirements of a
specification or contract are met.

** Code review

Is a software quality assurance activity in which one or several
people check a program by viewing  and reading parts of its source
code.

** Software walkthrough

Is a form of software peer review in which a designer or programmer
leads members of the development team and other interested parties
thrpugh a software product. And the participant ask questions and make
comments about possible errors and other possible problems.

** Test

Is a procedure intended to establish the quality, performance or
reliability of something, especially before it is taken into
widespread use.

** Validation

The act of confirming something as true or correct. Checks that the
software product satisfies or fits intended use, i.e., the software
meets the user requirements.
"Are we building the right product?"

** Varification

Checks that the specifications are correctly implemented.
"Are we building the product right?"

** Assembly language

Is any low-level programming language with a very strong
correspondence between the instructions in the language and the
arcitecture's machine.

** A compiler

Is a computer program that translates computer code written in one of
programming language (the source language) into another language (the
target language).

** Programming language

Is a system of notation for writing computer programs.

** Function

Is a sequence of program instuction that performs a specific task.

** Module

Is a discrete piece of code that can be independently created and
maintained to be used in different systems.

** Central Processing Unit (CPU)

is the brain of a computer, containing all the circuitry needed to
process input, store data, and output results. The CPU is constantly
following instructions of computer programs that tell it which data to
process and how to process it.

** Debugging

Is a process of finding and resolving bugs within computer programs,
software or system.

** Debugger or debugging tool

Is a computer program used to test and debug other program.

** Passive testing

Verifying the system behavior without any interaction with the
software product. Testers only look at system log and traces.

** Dynamic testing

Executing programmed code with a given set of test cases.

** Test case

Is a specification of the inputs, execution conditions, testing
procedure and expected results that define a single test to be
executed.

A test case is the individual unit of testing. It checks for a
specific response to a particular set of inputs.

** Test suit

Is a collection of test cases that are grouped for test execution
purposes. It is used to aggregate tests that should be executed
together.

** Test design

Defines "HOW" something can be tested. It is describes test strategy
or test plan.

** The Secure Shell Protocol (SSH)
is a cryptographic network protocol for operating network services
securely (in a way that avoids someone or something being harmed by
any risk, danger) over an unsecured network.  *ssh (SSH client)* is a
program for logging into a remote machine and for executing commands
on a remote machine. It is intended to provide secure encrypted
communications between two untrusted hosts over an insecure network.

** htop
is an interactive system-monitor process-viewer and
process-manager. It shows a frequently updated list of the processes
running on a computer, normally ordered by the amount of CPU usage.

** Emacs package
Is a collection of one or more ELisp files that Emacs searches in the
folder specified by load-path.

** LISP
An abbreviation of ("list processing") is a high-level programming
language created by John McCarthy in 1958. Lisp is the third-oldest
high-level programming language still in common use, after Fortran and
COBOL. It is a machine-independent language that supports dynamic
programming, object-oriented programming, and data types.

** Package management
is a system that allows users to easily install, manage, and update
packages. =Emacs package management= relies on package archives,
which act as online repositories that host packages.

** Selenium

Selenium is a free and open source library for automated testing web
application across different browsers and platforms, that implemented
on multiple programming languages. 

** API
An application programming interface is a way for two or more computer
programs to communicate with each other. It is a type of software
interface to exchange data across applications.

** WebDriver

Is a framework for automated testing web applications.

The way Selenium works is it uses the web driver protocol to
communicate with browsers. Webdriver as a protocol is a W3C standard.

** Chromedriver

Is a separate executable that Selenium WebDriver uses to control
Chrome.

** Application

#+begin_quote
Is a computer program designed to carry out a specific task
#+end_quote

Is a computer program intended to perform a concrete task.

** Web application

#+begin_quote
Is application software that is accessed using a web browser.
#+end_quote

Is a application that is accessed using a web browser.

** Web browser

#+begin_quote
Is an application for accessing websites.
#+end_quote

** Web site

#+begin_quote
Is a collection of many web pages that are written using HTML that are
identified by a common domain name.
#+end_quote

Is a collection of several web pages that are created using HTML and
that are linked by a common domain name.

** Domain name

#+begin_quote
Is unique name of a website. 
#+end_quote

** Defect

#+begin_quote
Is any deviation between an actual and expected result.
#+end_quote

** Bug

#+begin_quote
Is a problem that causes a program to produce invalid output.
#+end_quote

Is a error in software program that can invoke a program to produce
invalid output, misbehavior or crash.

** Error

#+begin_quote
Is a mistake a coder makes during the software development.
#+end_quote

** Functional testing

#+begin_quote
Tests functional requirements like functions and its components.
Makes ensurance that everything works properly, how expected and
desirable in functionality requirements.


Is a quality assurance process and a type of black-box testing that
bases its test cases on the specifications of the software component
under test. Functions are tested by feeding them input and examining
the output, and internal program structure is rarely
considered. Functional software testing is conducted to evaluate the
compliance of a system or component with specified functional
requirements.
#+end_quote

** Non-functional testing

#+begin_quote
Used to evaluate a software non-functional characteristic such as
performance, usability and dependability.
#+end_quote

** Software performance

#+begin_quote
Is how well a software or application it's intended tasks such as
speed, responsiveness, scalability and resource utilization. 
#+end_quote

** Quality assurance

#+begin_quote
Is the outermost layer of testing which prevents the possibility of
errors. This method provides assurance, that all the business
requirements will be achieved or delivered as per the expectations of
the consumer of the product. Is process oriented, where testing and
analysis are prevent error in the system before it happens. Quality
assurance comes under of Verification (static analysis technique,
where testing is dare without execution the code).
#+end_quote

** Quality control

#+begin_quote
Is a product oriented approach. It is ensures that standards are
followed, and is performed after the software feature is developed,
during the testing phase of sortware developmemt life cycle. It is
considered under Validation, which is dynamic analisys technique -
testing is done by execution the code.
#+end_quote

** SDLC

#+begin_quote
Is a methodology with clearly defined processes for creating
high-quality software. It involves six phases: requirement analysis,
planning, design, development, testing, and deployment.
#+end_quote

** Framework
A framework is a structure that you can build software on. It serves
as a foundation, so you're not starting entirely from scratch.

** Selenium WebDriver
Is an open-source collection of APIs that automates web application
testing across different browsers using different programming
languages.

** IDE
An integrated development environment (IDE) is a software application
that helps programmers develop software code efficiently and provides
comprehensive facilities for software development.

** Continuous Integration (CI)
It is the practice of using automation to enable teams to merge code
changes into the shared repository early and often. Each commit
triggers an automated workflow on a CI server that runs a series of
tasks to make sure the commit is safe to merge into the main branch. A
good CI process relies on a set of good tests.

** Continuous deployment (CD)

It is a process system deployment with minimal risks.

** DevOps
Is a methodology in the software development and IT industry. Used as
a set of practices and tools, DevOps integrates and automates the work
of software development (Dev) and IT operations (Ops) as a means for
improving and shortening the systems development life cycle.

** Program

#+begin_quote
Is a sequence of instructions in a programming language for a computer
to execute.
#+end_quote

** Test runner
 Is a special application designed for running tests, checking the
 output, and giving you tools for debugging and diagnosing tests and
 applications.

** Object-oriented programming (OOP)

Is a method of structuring a program by bundling related properties
and behaviors into individual objects

** XPATH

The XML Path Language, is a query language for selecting nodes from an
XML document.

** Headless browser

Is a web browser without a graphical user interface. Headless browsers
provide automated control of a web page in an environment similar to
popular web browsers, but they are executed via a command-line
interface or using network communication.

** Playwright

Is a framework for Web Testing and Automation. It allows testing
Chromium, Firefox and WebKit with a single API.

** Sanity check

Is a basic test to quickly evaluate whether a claim or the result of a
calculation can possibly be true.

These checks are known as =assertions=, and you can use them to test
if certain assumptions remain true while you’re developing your code.

** Statement

Is part of a suite (a “block” of code). A statement is
either an expression or one of several constructs with a keyword, such
as if, while or for.

** Authentication

Is the act of proving an assertion, such as the identity of a computer
system user.

The process or action of proving or showing something to be true,
genuine, or valid.

** Daemon

Is a computer program that runs as a background process, rather than
being under the direct control of an interactive use.

** SSHd

Is the daemon program for ssh.

** Python

Is an interpreted, object-oriented, high-level programming language
with dynamic semantics.

** Interpreted PL

Is a type of programming language is executed line by line, rather
than being compiled into machine code before execution. In an
interpreted language, the source code is read and executed by an
interpreter, which translates each line of code into machine code on
the fly.

** Object-oriented PL

Is a programming paradigm based on the concept of "objects", which may
contain data, in the form of fields, often known as attributes; and
code, in the form of procedures, often known as methods. For example,
a person is an object which has certain properties such as height,
gender, age, etc

** High-level PL

Is a programming language with strong abstraction from the details of
the computer. In contrast to low-level programming languages, it may
use natural language elements, be easier to use, or may automate
significant areas of computing systems, making the process of
developing a program simpler and more understandable than when using a
lower-level language.

** General-purpose PL

Is a programming language for building software in a wide variety of
application domains.

Python is a general-purpose language. It means that you can use Python
in various domains including: Web applications, Big data applications,
Testing, Automation, Data science, machine learning, and AI, Desktop
software, Mobile apps.

** Dynamically typed PL

Is a general technique for solving optimization, search and counting
problems that can be decomposed into subproblems which are then each
solved individually.

** Garbage-collected PL

A GC-enabled programming language includes one or more garbage
collectors (GC engines) that automatically free up memory space that
has been allocated to objects no longer needed by the program.

** Programming paradigm

Is an approach to solve a problem using some programming language or
tools and techniques.

** Structured programming

Is a programming paradigm aimed at improving the clarity, quality, and
development time of a computer program by making extensive use of the
structured control flow constructs of selection (if/then/else) and
repetition (while and for), block structures, and subroutines.


** Functional programming

Is a programming paradigm where programs are constructed by applying
and composing functions.

** Semantic

Is the study of linguistic meaning. It examines what meaning is, how
words get their meaning, and how the meaning of complex expression
depends on its parts. It treats the meaning of sentence as its
potential to update a context.

** Dynamic semantics

The type of variable is determined only during run time.

** Binary

Describes a numbering scheme in which there are onle two possibble
values for each digit - 0 or 1.

** Elpy

Elpy is an extension for the Emacs text editor to work with
Python projects.

** RPC Process

Elpy works by starting a Python process in the background and
communicating with it through a basic `Remote Procedure Call' (RPC)
interface.

** Python Virtual Environment

is an isolated space where you can work on your Python projects,
separately from your system-installed Python. You can set up your own
libraries and dependencies without affecting the system Python.

** Software portability

is a design objective for source code to be easily made to run on
different platforms. An aid to portability is the generalized
abstraction between the application logic and system interfaces.

** Software reproducibility

here means the ability for someone to replicate a computational
experiment that was done by someone else, using the same software and
data.

** The purpose of the Virtual environment

is creation an isolated from the main operating system set of
libraries that allow reproduce itself on other workstations and
execute Python code in the same environment.



